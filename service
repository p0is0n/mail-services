#!/bin/sh

### BEGIN INIT INFO
# Provides:          mail-services
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO
# Author: p0is0n

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/twistd
SERVICE_NAME=service
SERVICE_DIR=$(cd $(dirname $0); pwd -P)
PIDFILE=$SERVICE_DIR/logs/$SERVICE_NAME.pid
LOGFILE=$SERVICE_DIR/logs/$SERVICE_NAME.log
PROJECT="mail-services"
COLORS=1

DAEMON_OPTS="--pidfile=$PIDFILE --logfile=$LOGFILE -y $SERVICE_DIR/$SERVICE_NAME.py"

# Check wether stdout is redirected
if [ ! -t 1 ]; then
    COLORS=0
fi

# Check colors support
c=$(tput colors 2>/dev/null)
e=$?

if [ $e -ne 0 ]; then
  COLORS=0
elif [ $c -lt 8 ]; then
  COLORS=0
fi

if [ $COLORS -eq 1 ]; then
  GRAY="\033[1;30m"
  LIGHT_GRAY="\033[0;37m"
  CYAN="\033[0;36m"
  LIGHT_CYAN="\033[1;36m"
  PURPLE="\033[0;35m"
  RED="\033[0;31m"
  GREEN="\033[0;32m"
  NO_COLOUR="\033[0m"
fi

if [ ! -x $DAEMON ]; then
  DAEMON=/usr/local/bin/twistd
fi

# Set python path so twistd can find the plugin
# See: http://twistedmatrix.com/projects/core/documentation/howto/plugin.html
export PYTHONPATH=$SERVICE_DIR

if [ ! -x $DAEMON ]; then
  echo "ERROR: Can't execute $DAEMON."
  exit 1
fi

if [ ! -d $SERVICE_DIR ]; then
  echo "ERROR: Directory doesn't exist: $SERVICE_DIR"
  exit 1
fi

start_service() {
  echo -n " $PURPLE*$NO_COLOUR Starting $LIGHT_GRAY$PROJECT$NO_COLOUR $SERVICE_NAME... "
  start-stop-daemon -Sq -p $PIDFILE -x $DAEMON -- $DAEMON_OPTS
  e=$?
  if [ $e -eq 1 ]; then
    echo "${RED}already running$NO_COLOUR"
    return
  fi

  if [ $e -eq 255 ]; then
    echo "${RED}couldn't start :($NO_COLOUR"
    return
  fi

  echo "${GREEN}done$NO_COLOUR"
}

stop_service() {
  echo -n " $PURPLE*$NO_COLOUR Stopping $LIGHT_GRAY$PROJECT$NO_COLOUR $SERVICE_NAME... "
  start-stop-daemon -Kq -R "TERM/60/KILL/5" -p $PIDFILE
  e=$?
  if [ $e -eq 1 ]; then
    echo "${RED}not running$NO_COLOUR"
    return
  fi

  echo "${GREEN}done$NO_COLOUR"
}

case "$1" in
  start)
    start_service
    ;;
  stop)
    stop_service
    ;;
  restart)
    stop_service
    start_service
    ;;
  *)
    echo "Usage: $SERVICE_NAME {start|stop|restart}" >&2
    exit 1   
    ;;
esac

exit 0
